symbolic N;R :={ [i, j, k, ul0v1] -> [i', j', k', ul0v2] : ul0v1 = 23 and i' = i and j' = j and ul0v2 = 23 and 0 < i <= N and j <= N and k > 0 and k < k' <= j } union { [i, j, k, ul0v1] -> [i', j', k', ul0v2] : ul0v1 = 19 and i' = i and j' = j and ul0v2 = 19 and i <= N and 0 < j <= N and k > 0 and k < k' <= i } union { [i, j, k, ul0v1] -> [i', j', o2, ul0v2] : ul0v1 = 23 and i' = i and j' = j and o2 = 0 and ul0v2 = 25 and 0 < i <= N and j <= N and 0 < k <= j } union { [i, j, k, ul0v1] -> [i', j', o2, ul0v2] : ul0v1 = 19 and i' = i and j' = j and o2 = 0 and ul0v2 = 25 and i <= N and 0 < j <= N and 0 < k <= i } union { [i, j, i2, ul0v1] -> [i', j', k, ul0v2] : i2 = 0 and ul0v1 = 21 and i' = i and j' = j and ul0v2 = 23 and 0 < i <= N and j <= N and 0 < k <= j } union { [i, j, i2, ul0v1] -> [i', j', k, ul0v2] : i2 = 0 and ul0v1 = 25 and i' = i and k = -j + j' and ul0v2 = 23 and 0 < i <= N and j > 0 and j < j' <= N } union { [i, j, i2, ul0v1] -> [i', j', k, ul0v2] : i2 = 0 and ul0v1 = 17 and i' = i and j' = j and ul0v2 = 19 and i <= N and 0 < j <= N and 0 < k <= i } union { [i, j, i2, ul0v1] -> [i', j', k, ul0v2] : i2 = 0 and ul0v1 = 25 and j' = j and k = -i + i' and ul0v2 = 19 and i > 0 and 0 < j <= N and i < i' <= N } union { [i, j, i2, ul0v1] -> [i', j', o2, ul0v2] : i2 = 0 and ul0v1 = 21 and i' = i and j' = j and o2 = 0 and ul0v2 = 25 and 0 < i <= N and 0 < j <= N } union { [i, j, i2, ul0v1] -> [i', j', o2, ul0v2] : i2 = 0 and ul0v1 = 17 and i' = i and j' = j and o2 = 0 and ul0v2 = 25 and 0 < i <= N and 0 < j <= N } union { [i, j, i2, ul0v1] -> [i', j', o2, ul0v2] : i2 = 0 and ul0v1 = 25 and i' = 1 + i and j' = 1 + j and o2 = 0 and ul0v2 = 25 and 0 < i < N and 0 < j < N };IterateClosure R;