symbolic N;R :={ [i, j, k, ul0v1] -> [i', j', k', ul0v2] : j' = j and k' = i + k - i' and j < N and 0 <= k < -i + j and ul0v1 >= 15 and i' >= 0 and ul0v2 >= 15 and 16 - i + i' <= ul0v2 <= 31 - ul0v1 } union { [i, j, k, ul0v1] -> [i', j', k', ul0v2] : ul0v1 = 16 and i' = i and j' = j and ul0v2 = 16 and i >= 0 and j < N and k >= 0 and k < k' < -i + j } union { [i, j, k, ul0v1] -> [i', j', k', ul0v2] : ul0v1 = 16 and j' = 1 + j and k' = -1 + i - i' and ul0v2 = 15 and j <= -2 + N and 0 <= k < -i + j and 0 <= i' < i } union { [i, j, i2, ul0v1] -> [i', j', k, ul0v2] : i2 = 0 and ul0v1 = 13 and i' = i and j' = j and ul0v2 = 16 and i >= 0 and j < N and 0 <= k < -i + j } union { [i, j, i2, ul0v1] -> [i', j', k, ul0v2] : i2 = 0 and ul0v1 = 13 and i' = i and k = -i + j and ul0v2 = 16 and i >= 0 and j > i and j < j' < N } union { [i, j, i2, ul0v1] -> [i', j', k, ul0v2] : i2 = 0 and ul0v1 = 13 and j' = 1 + j and k = -1 + i - i' and ul0v2 = 15 and i < j <= -2 + N and 0 <= i' < i } union { [i, j, k, ul0v1] -> [i', j', o2, ul0v2] : ul0v1 = 16 and i' = i and j' = 1 + j and o2 = 0 and ul0v2 = 13 and i >= 0 and j <= -2 + N and 0 <= k < -i + j } union { [i, j, i2, ul0v1] -> [i', j', o2, ul0v2] : i2 = 0 and ul0v1 = 13 and i' = i and j' = 1 + j and o2 = 0 and ul0v2 = 13 and i >= 0 and i < j <= -2 + N } union { [i, j, k, ul0v1] -> [i', j', k', ul0v2] : ul0v1 = 16 and i' = i and k' = -i + j and ul0v2 = 16 and i >= 0 and 0 <= k < -i + j and j < j' < N };IterateClosure R;